name: Preview Environment

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'docs/**'
      - 'sdk/**'
      - 'package.json'
      - 'yarn.lock'

jobs:
  preview:
    name: Build and Preview
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Enable Corepack
        run: corepack enable

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/cache
            ~/.yarn/berry/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Generate SDK documentation
        run: yarn workspace @virginmediao2/storyblok-sdk docs

      - name: Lint and format check
        run: |
          yarn workspace @virginmediao2/storyblok-sdk check:fix
          yarn workspace docs check:fix

      - name: Build docs app
        run: yarn workspace docs build

      - name: Deploy to GitHub Pages (Preview)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/out
          destination_dir: preview/PR-${{ github.event.number }}
          keep_files: true

      - name: Create preview comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Check if docs were built successfully
            const docsPath = 'docs/out';
            if (fs.existsSync(docsPath)) {
              const files = fs.readdirSync(docsPath);
              if (files.length > 0) {
                const prNumber = context.issue.number;
                const previewUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/preview/PR-${prNumber}/`;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `üöÄ **Documentation Preview Ready!**
                  
                  The documentation has been built successfully for this PR.
                  
                  **üåê Live Preview URL:**
                  **[View Preview](${previewUrl})**
                  
                  **Built files:** ${files.length} files generated
                  
                  **Preview will be available at:**
                  \`${previewUrl}\`
                  
                  This preview will be automatically updated when you push new commits to this PR.`
                });
              } else {
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `‚ùå **Documentation build failed**
                  
                  The documentation build completed but no files were generated. Please check the build logs for errors.`
                });
              }
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `‚ùå **Documentation build failed**
                
                The documentation build failed. Please check the build logs for errors.`
              });
            }


